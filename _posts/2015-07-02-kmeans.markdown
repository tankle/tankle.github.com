---
layout: post
title:  Kmeans算法学习

category: Learning
tags: [机器学习]
description: |
  介绍了kmeans算法的基本思想。
---
{% include JB/setup %}



##k-means

###基本算法思想
{% highlight cpp %}
创建k个点作为起始质心（随机选择k个）
当任意一个点的簇分配结果发生改变的时
    对数据集中的每个数据点
        对每个质心
            计算质心与数据点之间的距离
        将数据点分配到距其最近的簇
    对每一个簇，计算簇中所有点的均值，并将该均值作为新的质心
{% endhighlight %}

###优缺点
优点：简单有效
缺点：
1. 容易收敛到局部最优解
2. 对初始质心比较敏感

###评价聚类性能
一般使用SSE（误差平方和）来作为评价指标


###二分K-means
为了克服k-means算法收敛于局部最优值的问题，提出了二分K-means算法.

该算法首先将所有点作为一个簇，然后将簇一分二。之后选择其中一个簇继续进行划分，具体选择哪一个簇进行划分，则取决于该划分是否可以最大程度降低SSE值。上述基于SSE的划分过程不断迭代，指导用户指定的簇数目为止。

基本思想
{% highlight cpp %}
将所有点看成一个簇
当簇数目小于K时
    对于每一个簇
        在给定的簇上面进行K-means聚类（一般k=2）
        计算将该簇一分为二之后的总误差
    选择是的误差最下的那个簇进行划分操作
{% endhighlight %}

具体算法可以参考[Github代码](https://github.com/tankle/kmeans)

